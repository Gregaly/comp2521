Input Size	Intial order	Number of runs	Avg Time of useIntList	Avg Time of sort
1000	random	5	0	0
1000	sorted	5	0.01	0
1000	reversed	5	0	0
2000	random	5	0.01	0
2000	sorted	5	0.02	0
2000	reversed	5	0	0
3000	random	5	0.02	0
3000	sorted	5	0.04	0
3000	reversed	5	0	0
4000	random	5	0.04	0
4000	sorted	5	0.07	0
4000	reversed	5	0	0
5000	random	5	0.06	0
5000	sorted	5	0.11	0
5000	reversed	5	0	0
6000	random	5	0.09	0
6000	sorted	5	0.15	0
6000	reversed	5	0.01	0
7000	random	5	0.12	0
7000	sorted	5	0.21	0
7000	reversed	5	0.01	0
8000	random	5	0.16	0
8000	sorted	5	0.27	0
8000	reversed	5	0.01	0
9000	random	5	0.2	0
9000	sorted	5	0.34	0
9000	reversed	5	0.01	0
10000	random	5	0.25	0
10000	sorted	5	0.42	0
10000	reversed	5	0.01	0
15000	random	5	0.65	0
15000	sorted	5	0.94	0
15000	reversed	5	0.01	0
20000	random	5	1.3	0
20000	sorted	5	1.7	0
20000	reversed	5	0.02	0
25000	random	5	2.1	0.01
25000	sorted	5	2.6	0
25000	reversed	5	0.02	0
30000	random	5	3.1	0.01
30000	sorted	5	4.1	0
30000	reversed	5	0.03	0
35000	random	5	4.3	0.01
35000	sorted	5	5.2	0
35000	reversed	5	0.03	0
40000	random	5	5.8	0.01
40000	sorted	5	6.8	0
40000	reversed	5	0.03	0
45000	random	5	7.5	0.01
45000	sorted	5	8.7	0
45000	reversed	5	0.04	0.006
50000	random	5	9.4	0.02
50000	sorted	5	11	0.01
50000	reversed	5	0.04	0.01
55000	random	5	12	0.02
55000	sorted	5	13	0.01
55000	reversed	5	0.05	0.01
60000	random	5	14	0.02
60000	sorted	5	16	0.01
60000	reversed	5	0.05	0.01
65000	random	5	16	0.02
65000	sorted	5	19	0.01
65000	reversed	5	0.056	0.01
70000	random	5	19	0.03
70000	sorted	5	21	0.01
70000	reversed	5	0.06	0.01
75000	random	5	22	0.03
75000	sorted	5	24	0.01
75000	reversed	5	0.06	0.01
80000	random	5	26	0.03
80000	sorted	5	28	0.01
80000	reversed	5	0.07	0.01
85000	random	5	32	0.03
85000	sorted	5	31	0.01
85000	reversed	5	0.07	0.01
90000	random	5	34	0.04
90000	sorted	5	35	0.01
90000	reversed	5	0.078	0.02
95000	random	5	38	0.04
95000	sorted	5	39	0.01
95000	reversed	5	0.08	0.02
100000	random	5	45	0.04
100000	sorted	5	43	0.02
100000	reversed	5	0.084	0.02


graphing the time/size graphs for all three types of data: unsorted, sorted and reversed, resulted in two different types of graph. For the default sort algorithm in linux, the graphs of all three types resulted in realtionship that looked similar to linear (O(n)). The sort utility implements a mergesort, an algorithm that has 0(nlogn) time complexity. This is likely due to the fact that with input sizes of max 100,000, log_2(100,000) = 17, this factor is negligible. 

On the other hand, 